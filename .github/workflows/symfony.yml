name: Symfony

on:
    push:
        branches: [ "infraAPI" ]
    pull_request:
        branches: [ "master" ]

permissions:
    contents: read

jobs:
    symfony-tests:
        runs-on: ubuntu-latest
        services:
            mariadb:
                image: mariadb:latest
                env:
                    MYSQL_ROOT_PASSWORD: root
                    MYSQL_DATABASE: symfony_test
                    MYSQL_USER: symfony_user
                    MYSQL_PASSWORD: symfony_password
                ports:
                    - 3306:3306
        steps:
            # To automatically get bug fixes and new Php versions for shivammathur/setup-php,
            # change this to (see https://github.com/shivammathur/setup-php#bookmark-versioning):
            # uses: shivammathur/setup-php@v2
            -   uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
                with:
                    php-version: '8.3'
            -   uses: actions/checkout@v3
            -   name: Cache Composer packages
                id: composer-cache
                uses: actions/cache@v3
                with:
                    path: vendor
                    key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-
            -   name: Install Dependencies
                run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --working-dir=infraAPI
            -   name: Install dockerize
                run: |
                    wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz
                          tar -xzvf dockerize-linux-amd64-v0.6.1.tar.gz
                          sudo mv dockerize /usr/local/bin/dockerize
                          rm dockerize-linux-amd64-v0.6.1.tar.gz
            -   name: Wait for MariaDB to be ready
                run: dockerize -wait tcp://mariadb:3306 -timeout 60s
            -   name: Create Database
                run: |
                    php bin/console doctrine:database:create --if-not-exists
                    php bin/console doctrine:schema:update --force
            -   name: Execute tests (Unit and Feature tests) via PHPUnit
                env:
                    DATABASE_URL: 'mysql://symfony_user:symfony_password@mariadb:3306/symfony_test'
                run: vendor/bin/phpunit
